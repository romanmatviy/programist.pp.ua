export const blogPosts = [
  {
    id: 1,
    slug: 'optimize-website-speed',
    title: {
      ua: 'Як оптимізувати швидкість завантаження сайту',
      ru: 'Как оптимизировать скорость загрузки сайта'
    },
    content: {
      ua: `
        <h2>Вступ</h2>
        <p>Швидкість завантаження сайту - це критично важливий фактор для користувацького досвіду та SEO. У цій статті ми розглянемо основні способи покращення продуктивності вашого веб-сайту.</p>
        
        <h2>Оптимізація зображень</h2>
        <p>Використовуйте сучасні формати зображень, такі як WebP, і обов'язково стискайте зображення перед завантаженням на сервер.</p>
        
        <h2>Кешування</h2>
        <p>Налаштуйте кешування на стороні сервера та клієнта для прискорення завантаження сторінок.</p>
      `,
      ru: `
        <h2>Введение</h2>
        <p>Скорость загрузки сайта - это критически важный фактор для пользовательского опыта и SEO. В этой статье мы рассмотрим основные способы улучшения производительности вашего веб-сайта.</p>
        
        <h2>Оптимизация изображений</h2>
        <p>Используйте современные форматы изображений, такие как WebP, и обязательно сжимайте изображения перед загрузкой на сервер.</p>
        
        <h2>Кеширование</h2>
        <p>Настройте кеширование на стороне сервера и клиента для ускорения загрузки страниц.</p>
      `
    },
    excerpt: {
      ua: 'Практичні поради щодо покращення продуктивності веб-сайтів. Розглянемо техніки оптимізації зображень, кешування та мінімізації коду.',
      ru: 'Практические советы по улучшению производительности веб-сайтов. Рассмотрим техники оптимизации изображений, кеширования и минимизации кода.'
    },
    date: '2025-01-15',
    updatedAt: '2025-01-20',
    author: 'Роман Матвій',
    authorRole: 'Frontend Архітектор',
    authorBio: 'Досвідчений фронтенд розробник з 7-річним досвідом роботи з React та Next.js. Експерт у створенні високонавантажених веб-додатків.',
    image: 'https://images.unsplash.com/photo-1460925895917-afdab827c52f?w=1200&h=630&fit=crop',
    tags: ['Performance', 'Optimization', 'Web Development'],
    readTime: '6 хв',
    relatedPosts: [2, 3, 5]
  },
  {
    id: 2,
    slug: 'laravel-11-new-features',
    title: {
      ua: 'Laravel 11: Що нового?',
      ru: 'Laravel 11: Что нового?'
    },
    content: {
      ua: `
        <h2>Оновлення Laravel 11</h2>
        <p>Laravel 11 приносить багато очікуваних оновлень та покращень продуктивності.</p>
        
        <h3>Нові можливості</h3>
        <p>Оновлена система кешування, покращена обробка черг та багато іншого.</p>
      `,
      ru: `
        <h2>Обновление Laravel 11</h2>
        <p>Laravel 11 приносит много ожидаемых обновлений и улучшений производительности.</p>
        
        <h3>Новые возможности</h3>
        <p>Обновленная система кеширования, улучшенная обработка очередей и многое другое.</p>
      `
    },
    excerpt: {
      ua: 'Огляд нових можливостей Laravel 11. Покращення продуктивності, нові функції та зміни в архітектурі фреймворку.',
      ru: 'Обзор новых возможностей Laravel 11. Улучшение производительности, новые функции и изменения в архитектуре фреймворка.'
    },
    date: '2025-01-10',
    updatedAt: '2025-01-12',
    author: 'Роман Матвій',
    authorRole: 'Backend Developer',
    authorBio: 'Розробник з 8-річним досвідом роботи з Laravel та PHP. Спеціалізується на створенні складних бекенд-систем.',
    image: 'https://images.unsplash.com/photo-1555066931-4365d14bab8c?w=1200&h=630&fit=crop',
    tags: ['Laravel', 'PHP', 'Backend'],
    readTime: '8 хв',
    relatedPosts: [1, 4, 6]
  },
  {
    id: 3,
    slug: 'nextjs-14-features',
    title: {
      ua: 'Next.js 14: Огляд нових функцій та покращень продуктивності',
      ru: 'Next.js 14: Обзор новых функций и улучшений производительности'
    },
    content: {
      ua: `
        <h2>Вступ до Next.js 14</h2>
        <p>Next.js 14 - це великий реліз, який приносить численні покращення продуктивності, нові функції та поліпшення для розробників. У цій статті ми детально розглянемо всі ключові оновлення.</p>
        
        <h3>1. Turbopack (бета)</h3>
        <p>Новий двигун збірки, який працює значно швидше за webpack:</p>
        <ul>
          <li>До 10x швидше оновлення коду під час розробки</li>
          <li>Покращене інкрементальне збирання</li>
          <li>Краща підтримка TypeScript</li>
        </ul>
        
        <h3>2. Server Actions (стабільна версія)</h3>
        <p>Простий спосіб виконувати серверний код з клієнтських компонентів:</p>
        <ul>
          <li>Мутації даних без написання API ендпоінтів</li>
          <li>Вбудована валідація форми</li>
          <li>Оптимістичні оновлення за замовчуванням</li>
        </ul>
        
        <h3>3. Покращена підтримка TypeScript</h3>
        <p>Краща типізація та інтеграція з TypeScript 5.0+</p>
      `,
      ru: `
        <h2>Введение в Next.js 14</h2>
        <p>Next.js 14 - это крупный релиз, который приносит многочисленные улучшения производительности, новые функции и улучшения для разработчиков. В этой статье мы подробно рассмотрим все ключевые обновления.</p>
        
        <h3>1. Turbopack (бета)</h3>
        <p>Новый движок сборки, который работает значительно быстрее webpack:</p>
        <ul>
          <li>До 10 раз быстрее обновление кода во время разработки</li>
          <li>Улучшенная инкрементальная сборка</li>
          <li>Лучшая поддержка TypeScript</li>
        </ul>
        
        <h3>2. Server Actions (стабильная версия)</h3>
        <p>Простой способ выполнять серверный код из клиентских компонентов:</p>
        <ul>
          <li>Мутации данных без написания API эндпоинтов</li>
          <li>Встроенная валидация форм</li>
          <li>Оптимистичные обновления по умолчанию</li>
        </ul>
        
        <h3>3. Улучшенная поддержка TypeScript</h3>
        <p>Лучшая типизация и интеграция с TypeScript 5.0+</p>
      `
    },
    excerpt: {
      ua: 'Детальний огляд нових можливостей Next.js 14. Дізнайтеся про Turbopack, Server Actions, покращену підтримку TypeScript та інші важливі оновлення.',
      ru: 'Подробный обзор новых возможностей Next.js 14. Узнайте о Turbopack, Server Actions, улучшенной поддержке TypeScript и других важных обновлениях.'
    },
    date: '2025-02-05',
    updatedAt: '2025-02-10',
    author: 'Роман Матвій',
    authorRole: 'Frontend Архітектор',
    authorBio: 'Досвідчений фронтенд розробник з 7-річним досвідом роботи з React та Next.js. Експерт у створенні високонавантажених веб-додатків.',
    image: 'https://images.unsplash.com/photo-1633356122544-f134324a6cee?w=1200&h=630&fit=crop',
    tags: ['Next.js', 'React', 'Frontend', 'TypeScript', 'Веб-розробка'],
    readTime: '8 хв',
    relatedPosts: [1, 2, 5]
  },
  {
    id: 4,
    slug: 'docker-for-developers',
    title: {
      ua: 'Docker для розробників: Повний посібник',
      ru: 'Docker для разработчиков: Полное руководство'
    },
    content: {
      ua: `
        <h2>Що таке Docker і навіщо він потрібен</h2>
        <p>Docker - це платформа для розгортання додатків у контейнерах. Вона дозволяє упакувати програму з усіма необхідними залежностями в стандартний контейнер.</p>
        
        <h3>1. Встановлення та налаштування</h3>
        <p>Як встановити Docker на різних операційних системах.</p>
        
        <h3>2. Робота з контейнерами</h3>
        <p>Основні команди Docker для роботи з контейнерами.</p>
      `,
      ru: `
        <h2>Что такое Docker и зачем он нужен</h2>
        <p>Docker - это платформа для развертывания приложений в контейнерах. Она позволяет упаковать программу со всеми необходимыми зависимостями в стандартный контейнер.</p>
        
        <h3>1. Установка и настройка</h3>
        <p>Как установить Docker на разных операционных системах.</p>
        
        <h3>2. Работа с контейнерами</h3>
        <p>Основные команды Docker для работы с контейнерами.</p>
      `
    },
    excerpt: {
      ua: 'Детальний посібник з використання Docker для розробників. Від основ до просунутих технік контейнеризації.',
      ru: 'Подробное руководство по использованию Docker для разработчиков. От основ до продвинутых техник контейнеризации.'
    },
    date: '2025-02-15',
    updatedAt: '2025-02-20',
    author: 'Роман Матвій',
    authorRole: 'DevOps Інженер',
    authorBio: 'Інженер з 6-річним досвідом роботи з Docker, Kubernetes та хмарними технологіями. Допомагає командам впроваджувати DevOps практики.',
    image: 'https://images.unsplash.com/photo-1625832018373-4dab1096197e?w=1200&h=630&fit=crop',
    tags: ['Docker', 'DevOps', 'Контейнеризація'],
    readTime: '10 хв',
    relatedPosts: [2, 5, 7]
  },
  {
    id: 5,
    slug: 'react-performance-optimization',
    title: {
      ua: 'Оптимізація продуктивності React додатків',
      ru: 'Оптимизация производительности React приложений'
    },
    content: {
      ua: `
        <h2>Чому важлива продуктивність у React?</h2>
        <p>Продуктивність - це ключовий аспект користувацького досвіду. У цій статті ми розглянемо, як покращити продуктивність ваших React-додатків.</p>
        
        <h3>1. Мемоізація з useMemo та useCallback</h3>
        <p>Як уникнути зайвих ререндерів за допомогою мемоізації.</p>
        
        <h3>2. Ліниве завантаження компонентів</h3>
        <p>Використання React.lazy та Suspense для покращення часу завантаження.</p>
      `,
      ru: `
        <h2>Почему важна производительность в React?</h2>
        <p>Производительность - это ключевой аспект пользовательского опыта. В этой статье мы рассмотрим, как улучшить производительность ваших React-приложений.</p>
        
        <h3>1. Мемоизация с useMemo и useCallback</h3>
        <p>Как избежать лишних ререндеров с помощью мемоизации.</p>
        
        <h3>2. Ленивая загрузка компонентов</h3>
        <p>Использование React.lazy и Suspense для улучшения времени загрузки.</p>
      `
    },
    excerpt: {
      ua: 'Практичні техники оптимізації продуктивності React додатків. Дізнайтеся, як зробити ваш додаток швидшим та ефективнішим.',
      ru: 'Практические техники оптимизации производительности React приложений. Узнайте, как сделать ваше приложение быстрее и эффективнее.'
    },
    date: '2025-03-01',
    updatedAt: '2025-03-05',
    author: 'Роман Матвій',
    authorRole: 'Senior Frontend Developer',
    authorBio: 'Фронтенд розробниця з 5-річним досвідом роботи з React. Спеціалізується на оптимізації продуктивності складних інтерфейсів.',
    image: 'https://images.unsplash.com/photo-1573496359142-b8d87734a5a2?w=1200&h=630&fit=crop',
    tags: ['React', 'Performance', 'Frontend', 'JavaScript'],
    readTime: '9 хв',
    relatedPosts: [1, 3, 6]
  },
  {
    id: 6,
    slug: 'graphql-vs-rest',
    title: {
      ua: 'GraphQL vs REST: Що обрати у 2025 році?',
      ru: 'GraphQL vs REST: Что выбрать в 2025 году?'
    },
    content: {
      ua: `
        <h2>Вступ до GraphQL та REST</h2>
        <p>Порівняння двох популярних підходів до створення API. У чому різниця та коли краще використовувати кожен з них.</p>
        
        <h3>1. Переваги GraphQL</h3>
        <p>Гнучкість запитів, ефективність, строга типізація.</p>
        
        <h3>2. Коли краще використовувати REST</h3>
        <p>Проекти з простими даними, кешування на рівні HTTP.</p>
      `,
      ru: `
        <h2>Введение в GraphQL и REST</h2>
        <p>Сравнение двух популярных подходов к созданию API. В чем разница и когда лучше использовать каждый из них.</p>
        
        <h3>1. Преимущества GraphQL</h3>
        <p>Гибкость запросов, эффективность, строгая типизация.</p>
        
        <h3>2. Когда лучше использовать REST</h3>
        <p>Проекты с простыми данными, кеширование на уровне HTTP.</p>
      `
    },
    excerpt: {
      ua: 'Детальне порівняння GraphQL та REST API. Переваги, недоліки та випадки використання кожної технології у сучасній веб-розробці.',
      ru: 'Подробное сравнение GraphQL и REST API. Преимущества, недостатки и случаи использования каждой технологии в современной веб-разработке.'
    },
    date: '2025-03-10',
    updatedAt: '2025-03-15',
    author: 'Роман Матвій',
    authorRole: 'Full-stack Developer',
    authorBio: 'Full-stack розробник з досвідом роботи з різними технологіями API. Допомагає обирати оптимальні рішення для кожного проекту.',
    image: 'https://images.unsplash.com/photo-1551288049-bebda4e38f71?w=1200&h=630&fit=crop',
    tags: ['GraphQL', 'REST', 'API', 'Backend'],
    readTime: '7 хв',
    relatedPosts: [3, 5, 7]
  },
  {
    id: 7,
    slug: 'typescript-best-practices',
    title: {
      ua: 'TypeScript: Найкращі практики для розробників',
      ru: 'TypeScript: Лучшие практики для разработчиков'
    },
    content: {
      ua: `
        <h2>Чому варто використовувати TypeScript</h2>
        <p>TypeScript надає статичну типізацію, яка допомагає уникнути багатьох помилок ще на етапі розробки.</p>
        
        <h3>1. Типи та інтерфейси</h3>
        <p>Як ефективно використовувати типи та інтерфейси у великих проектах.</p>
        
        <h3>2. Generics</h3>
        <p>Приклади використання Generics для створення універсальних компонентів.</p>
      `,
      ru: `
        <h2>Почему стоит использовать TypeScript</h2>
        <p>TypeScript предоставляет статическую типизацию, которая помогает избежать многих ошибок еще на этапе разработки.</p>
        
        <h3>1. Типы и интерфейсы</h3>
        <p>Как эффективно использовать типы и интерфейсы в больших проектах.</p>
        
        <h3>2. Generics</h3>
        <p>Примеры использования Generics для создания универсальных компонентов.</p>
      `
    },
    excerpt: {
      ua: 'Огляд найкращих практик роботи з TypeScript. Як писати більш надійний та підтримуваний код з використанням сучасних можливостей TypeScript.',
      ru: 'Обзор лучших практик работы с TypeScript. Как писать более надежный и поддерживаемый код с использованием современных возможностей TypeScript.'
    },
    date: '2025-03-20',
    updatedAt: '2025-03-25',
    author: 'Роман Матвій',
    authorRole: 'TypeScript Developer',
    authorBio: 'Розробниця з 4-річним досвідом роботи з TypeScript. Допомагає командам впроваджувати TypeScript у великі проекти.',
    image: 'https://images.unsplash.com/photo-1551434678-e076c223a692?w=1200&h=630&fit=crop',
    tags: ['TypeScript', 'JavaScript', 'Frontend', 'Веб-розробка'],
    readTime: '8 хв',
    relatedPosts: [3, 5, 6]
  },
  {
    id: 8,
    slug: 'cypress-e2e-testing',
    title: {
      ua: 'Повний посібник з E2E тестування за допомогою Cypress',
      ru: 'Полное руководство по E2E тестированию с помощью Cypress'
    },
    content: {
      ua: `
        <h2>Вступ до Cypress</h2>
        <p>Cypress - це сучасний інструмент для E2E тестування веб-додатків.</p>
        
        <h3>1. Налаштування проекту</h3>
        <p>Як налаштувати Cypress у вашому проекті.</p>
        
        <h3>2. Написання тестів</h3>
        <p>Приклади тестів для різних сценаріїв.</p>
      `,
      ru: `
        <h2>Введение в Cypress</h2>
        <p>Cypress - это современный инструмент для E2E тестирования веб-приложений.</p>
        
        <h3>1. Настройка проекта</h3>
        <p>Как настроить Cypress в вашем проекте.</p>
        
        <h3>2. Написание тестов</h3>
        <p>Примеры тестов для различных сценариев.</p>
      `
    },
    excerpt: {
      ua: 'Детальний посібник з E2E тестування за допомогою Cypress. Дізнайтеся, як створювати надійні тести для вашого веб-додатку.',
      ru: 'Подробное руководство по E2E тестированию с помощью Cypress. Узнайте, как создавать надежные тесты для вашего веб-приложения.'
    },
    date: '2025-04-01',
    updatedAt: '2025-04-05',
    author: 'Роман Матвій',
    authorRole: 'QA Automation Engineer',
    authorBio: 'Інженер з автоматизованого тестування з 5-річним досвідом. Спеціалізується на E2E тестуванні веб-додатків.',
    image: 'https://images.unsplash.com/photo-1556075798-4825dfaaf498?w=1200&h=630&fit=crop',
    tags: ['Cypress', 'Тестування', 'E2E', 'QA', 'Автоматизація'],
    readTime: '11 хв',
    relatedPosts: [3, 5, 7]
  },
  {
    id: 9,
    slug: 'microservices-architecture',
    title: {
      ua: 'Мікросервісна архітектура: Від теорії до практики',
      ru: 'Микросервисная архитектура: От теории к практике'
    },
    content: {
      ua: `
        <h2>Що таке мікросервіси?</h2>
        <p>Огляд мікросервісної архітектури та її переваг.</p>
        
        <h3>1. Принципи проектування</h3>
        <ul>
          <li>Визначення меж сервісів</li>
          <li>Незалежне розгортання</li>
          <li>Розподілена відповідальність</li>
        </ul>
        
        <h3>2. Технології для мікросервісів</h3>
        <p>Огляд популярних інструментів та фреймворків.</p>
      `,
      ru: `
        <h2>Что такое микросервисы?</h2>
        <p>Обзор микросервисной архитектуры и её преимуществ.</p>
        
        <h3>1. Принципы проектирования</h3>
        <ul>
          <li>Определение границ сервисов</li>
          <li>Независимое развертывание</li>
          <li>Распределенная ответственность</li>
        </ul>
        
        <h3>2. Технологии для микросервисов</h3>
        <p>Обзор популярных инструментов и фреймворков.</p>
      `
    },
    excerpt: {
      ua: 'Детальний посібник з мікросервісної архітектури. Від основних концепцій до практичного застосування у великих проектах.',
      ru: 'Подробное руководство по микросервисной архитектуре. От основных концепций до практического применения в крупных проектах.'
    },
    date: '2025-04-10',
    updatedAt: '2025-04-15',
    author: 'Роман Матвій',
    authorRole: 'Solution Architect',
    authorBio: 'Архітектор рішень з 10-річним досвідом роботи з розподіленими системами. Допомагає компаніям будувати масштабовані архітектури.',
    image: 'https://images.unsplash.com/photo-1551434678-e076c223a692?w=1200&h=630&fit=crop',
    tags: ['Архітектура', 'Мікросервіси', 'DevOps', 'Backend'],
    readTime: '12 хв',
    relatedPosts: [2, 4, 6]
  },
  {
    id: 10,
    slug: 'wordpress-recovery-after-hack',
    title: {
      ua: 'Як відновити роботу сайту на WordPress після злому',
      ru: 'Как восстановить работу сайта на WordPress после взлома'
    },
    content: {
      ua: `
        <h2>Що робити, якщо ваш WordPress сайт зламано?</h2>
        <p>Покрокова інструкція з відновлення роботи вашого сайту після злому.</p>
        
        <h3>1. Визначення масштабів пошкодження</h3>
        <ul>
          <li>Перевірка на наявність дивних файлів</li>
          <li>Аналіз логів сервера</li>
          <li>Перевірка на шкідливий код</li>
        </ul>
        
        <h3>2. Відновлення з резервної копії</h3>
        <p>Як правильно відновити сайт з бекапу та переконатися, що загроза усунена.</p>
        
        <h3>3. Оновлення безпеки</h3>
        <p>Заходи для запобігання майбутнім атакам.</p>
      `,
      ru: `
        <h2>Что делать, если ваш WordPress сайт взломали?</h2>
        <p>Пошаговая инструкция по восстановлению работы вашего сайта после взлома.</p>
        
        <h3>1. Определение масштабов повреждения</h3>
        <ul>
          <li>Проверка на наличие подозрительных файлов</li>
          <li>Анализ логов сервера</li>
          <li>Проверка на наличие вредоносного кода</li>
        </ul>
        
        <h3>2. Восстановление из резервной копии</h3>
        <p>Как правильно восстановить сайт из бэкапа и убедиться, что угроза устранена.</p>
        
        <h3>3. Обновление безопасности</h3>
        <p>Меры по предотвращению будущих атак.</p>
      `
    },
    excerpt: {
      ua: 'Покроковий посібник з відновлення роботи WordPress сайту після злому. Навчимося виявляти шкідливий код, відновлювати дані та захищати сайт у майбутньому.',
      ru: 'Пошаговое руководство по восстановлению работы WordPress сайта после взлома. Научимся выявлять вредоносный код, восстанавливать данные и защищать сайт в будущем.'
    },
    date: '2025-05-01',
    updatedAt: '2025-05-05',
    author: 'Роман Матвій',
    authorRole: 'WordPress Security Expert',
    authorBio: 'Фахівець з безпеки веб-додатків з 7-річним досвідом. Допомагає клієнтам захистити свої сайти від кібератак та відновлювати роботу після зломів.',
    image: 'https://images.unsplash.com/photo-1563986768609-322da13575f3?w=1200&h=630&fit=crop',
    tags: ['WordPress', 'Безпека', 'Відновлення даних', 'Кібербезпека', 'Хакерські атаки'],
    readTime: '15 хв',
    relatedPosts: [1, 4, 7]
  },
  {
    id: 11,
    slug: 'fix-500-internal-server-error',
    title: {
      ua: 'Як виправити помилку 500 Internal Server Error',
      ru: 'Как исправить ошибку 500 Internal Server Error'
    },
    content: {
      ua: `
        <h2>Що таке помилка 500?</h2>
        <p>Розбираємося з причинами виникнення та способами вирішення.</p>
        
        <h3>1. Основні причини помилки</h3>
        <ul>
          <li>Проблеми з файлами .htaccess</li>
          <li>Невідповідність версій PHP</li>
          <li>Проблеми з дозволами файлів</li>
        </ul>
        
        <h3>2. Діагностика проблеми</h3>
        <p>Як визначити точну причину помилки за допомогою логів сервера.</p>
        
        <h3>3. Рішення для популярних CMS</h3>
        <p>Особливості виправлення для WordPress, Joomla, OpenCart та інших систем.</p>
      `,
      ru: `
        <h2>Что такое ошибка 500?</h2>
        <p>Разбираемся с причинами появления и способами решения.</p>
        
        <h3>1. Основные причины ошибки</h3>
        <ul>
          <li>Проблемы с файлами .htaccess</li>
          <li>Несоответствие версий PHP</li>
          <li>Проблемы с правами доступа к файлам</li>
        </ul>
        
        <h3>2. Диагностика проблемы</h3>
        <p>Как определить точную причину ошибки с помощью логов сервера.</p>
        
        <h3>3. Решения для популярных CMS</h3>
        <p>Особенности исправления для WordPress, Joomla, OpenCart и других систем.</p>
      `
    },
    excerpt: {
      ua: 'Детальний посібник з вирішення помилки 500 Internal Server Error. Розбираємо основні причини виникнення та надаємо покрокові інструкції з виправлення.',
      ru: 'Подробное руководство по решению ошибки 500 Internal Server Error. Разбираем основные причины появления и даем пошаговые инструкции по исправлению.'
    },
    date: '2025-05-10',
    updatedAt: '2025-05-12',
    author: 'Роман Матвій',
    authorRole: 'Full-stack Developer',
    authorBio: 'Досвідчений розробник з 7-річним стажем. Спеціалізується на вирішенні складних технічних проблем веб-додатків.',
    image: 'https://images.unsplash.com/photo-1518770660439-4636190af475?w=1200&h=630&fit=crop',
    tags: ['Помилки сервера', 'Налаштування сервера', 'Веб-розробка', 'Технічна підтримка'],
    readTime: '12 хв',
    relatedPosts: [1, 5, 9]
  },
  {
    id: 12,
    slug: 'speed-up-wordpress',
    title: {
      ua: 'Як пришвидшити завантаження WordPress сайту в 2 рази',
      ru: 'Как ускорить загрузку WordPress сайта в 2 раза'
    },
    content: {
      ua: `
        <h2>Чому швидкість сайту важлива?</h2>
        <p>Вплив швидкості завантаження на конверсію та SEO.</p>
        
        <h3>1. Оптимізація зображень</h3>
        <ul>
          <li>Вибір правильного формату</li>
          <li>Стиснення без втрат якості</li>
          <li>Використання lazy loading</li>
        </ul>
        
        <h3>2. Кешування та кеш плагіни</h3>
        <p>Огляд найкращих рішень для кешування.</p>
        
        <h3>3. Оптимізація бази даних</h3>
        <p>Як прискорити роботу MySQL.</p>
      `,
      ru: `
        <h2>Почему скорость сайта важна?</h2>
        <p>Влияние скорости загрузки на конверсию и SEO.</p>
        
        <h3>1. Оптимизация изображений</h3>
        <ul>
          <li>Выбор правильного формата</li>
          <li>Сжатие без потери качества</li>
          <li>Использование lazy loading</li>
        </ul>
        
        <h3>2. Кеширование и плагины кеширования</h3>
        <p>Обзор лучших решений для кеширования.</p>
        
        <h3>3. Оптимизация базы данных</h3>
        <p>Как ускорить работу MySQL.</p>
      `
    },
    excerpt: {
      ua: 'Практичні поради з прискорення роботи WordPress сайту. Дізнайтеся про найефективніші методи оптимізації швидкості завантаження сторінок.',
      ru: 'Практические советы по ускорению работы WordPress сайта. Узнайте о самых эффективных методах оптимизации скорости загрузки страниц.'
    },
    date: '2025-05-15',
    updatedAt: '2025-05-18',
    author: 'Роман Матвій',
    authorRole: 'WordPress Performance Expert',
    authorBio: 'Експерт з оптимізації продуктивності веб-сайтів. Допомагає клієнтам значно прискорити роботу їхніх інтернет-проектів.',
    image: 'https://images.unsplash.com/photo-1481487190340-4e766b19e4a1?w=1200&h=630&fit=crop',
    tags: ['WordPress', 'Продуктивність', 'Оптимізація', 'SEO', 'Швидкість завантаження'],
    readTime: '14 хв',
    relatedPosts: [1, 3, 10]
  },
  {
    id: 13,
    slug: 'fix-404-not-found',
    title: {
      ua: 'Як виправити помилку 404 Not Found: Повний посібник',
      ru: 'Как исправить ошибку 404 Not Found: Полное руководство'
    },
    content: {
      ua: `
        <h2>Що таке помилка 404?</h2>
        <p>Розбираємося з причинами та наслідками помилки "Сторінку не знайдено".</p>
        
        <h3>1. Причини виникнення помилки</h3>
        <ul>
          <li>Неправильні URL-адреси</li>
          <li>Проблеми з переадресацією</li>
          <li>Видалені або переміщені сторінки</li>
        </ul>
        
        <h3>2. Як виправити помилку 404</h3>
        <p>Покрокова інструкція з усунення проблеми.</p>
        
        <h3>3. Налаштування користувацької сторінки 404</h3>
        <p>Як створити зручну сторінку помилки для користувачів.</p>
      `,
      ru: `
        <h2>Что такое ошибка 404?</h2>
        <p>Разбираемся с причинами и последствиями ошибки "Страница не найдена".</p>
        
        <h3>1. Причины появления ошибки</h3>
        <ul>
          <li>Неправильные URL-адреса</li>
          <li>Проблемы с перенаправлением</li>
          <li>Удаленные или перемещенные страницы</li>
        </ul>
        
        <h3>2. Как исправить ошибку 404</h3>
        <p>Пошаговая инструкция по устранению проблемы.</p>
        
        <h3>3. Настройка пользовательской страницы 404</h3>
        <p>Как создать удобную страницу ошибки для пользователей.</p>
      `
    },
    excerpt: {
      ua: 'Детальний посібник з вирішення помилки 404 Not Found. Навчимося швидко знаходити та виправляти проблеми зі сторінками, які не знаходяться.',
      ru: 'Подробное руководство по решению ошибки 404 Not Found. Научимся быстро находить и исправлять проблемы со страницами, которые не находятся.'
    },
    date: '2025-05-20',
    updatedAt: '2025-05-22',
    author: 'Роман Матвій',
    authorRole: 'Web Developer',
    authorBio: 'Досвідчений веб-розробник з фокусом на користувацький досвід та технічну підтримку. Допомагає вирішувати складні технічні питання.',
    image: 'https://images.unsplash.com/photo-1551288049-bebda4e38f71?w=1200&h=630&fit=crop',
    tags: ['Помилки', 'Веб-розробка', 'SEO', 'Технічна підтримка', 'WordPress'],
    readTime: '10 хв',
    relatedPosts: [1, 10, 11]
  }
];
